MiniBit: Implementação de um Sistema de Compartilhamento Cooperativo de Arquivos com Estratégias Distribuídas

1. Objetivo

1.1. Desenvolver um sistema distribuído inspirado nos princípios do BitTorrent, com foco em:
1.1.1. Divisão de arquivos em blocos;
1.1.2. Compartilhamento entre múltiplos peers;
1.1.3. Uso de estratégias reais de distribuição (rarest first + olho por olho);
1.1.4. Um tracker central simples para descoberta de peers.

2. Requisitos funcionais obrigatórios

2.1. Divisão de arquivo em blocos:
2.1.1. O arquivo a ser compartilhado deve ser dividido em blocos numerados (block_0, block_1, ...).

2.2. Peers distribuídos com blocos parciais:
2.2.1. Cada peer inicia com um subconjunto aleatório dos blocos.

2.3. Comunicação entre peers (P2P):
2.3.1. Peers devem trocar blocos entre si sem depender de um servidor central de conteúdo.

2.4. Tracker central simples:
2.4.1. Um servidor central que, ao ser consultado por um peer, retorna um subconjunto aleatório de peers disponíveis (exceto ele mesmo).
2.4.2. Se a rede tiver menos de 5 peers, o tracker retorna todos os peers.

2.5. Rarest First:
2.5.1. O algoritmo de seleção de blocos deve priorizar aqueles menos comuns entre os peers conhecidos.

2.6. Olho por olho (tit-for-tat simplificado):
2.6.1. A cada intervalo de 10 segundos, cada peer deve desbloquear (unchoke) um novo peer aleatório entre os que conhece, para iniciar a troca de blocos.
2.6.2. Se esse novo peer possuir blocos considerados raros (ou seja, menos comuns entre os demais peers conhecidos), ele poderá ser promovido a um dos 4 peers prioritários (unchoked fixos).
2.6.3. A cada rodada, o conjunto de peers desbloqueados deve conter no máximo 4 usuários fixos + 1 otimista (optimistic unchoke).
2.6.4. A decisão de manter um peer na lista é baseada em quantos blocos raros ele possui em relação aos outros.
2.6.5. Peers fora dessa lista ficam choked (bloqueados para envio).
2.6.6. Observação importante: esta não é a implementação fiel do algoritmo tit-for-tat usado no BitTorrent real, que leva em conta a taxa de upload. Esta versão deve ser adaptada para funcionar em um ambiente de simulação local (em uma única máquina), onde medir taxa de envio real seria inviável.

2.7. Encerramento controlado:
2.7.1. O sistema deve permitir que um peer se desligue somente após reconstruir o arquivo completo.

3. Fora de escopo:

3.1. Arquivo .torrent;
3.2. DHT (Distributed Hash Table);
3.3. Estratégias de choking/unchoking complexas;
3.4. Interface gráfica.

4. Entregas obrigatórias

4.1. Código-fonte comentado, com:
4.1.1. Scripts para inicializar múltiplos peers e o tracker;
4.1.2. Execução local ou em rede (Docker ou múltiplos terminais/hosts);
4.1.3. Logs mostrando o progresso dos blocos.

4.2. Relatório técnico (PDF) com:
4.2.1. Diagrama da arquitetura;
4.2.2. Descrição do protocolo de comunicação (mensagens trocadas, estados);
4.2.3. Estratégia para rarest first e tit-for-tat;
4.2.4. Resultados de testes (ex: tempo médio até completar, número de mensagens, etc.);
4.2.5. Dificuldades enfrentadas;
4.2.6. Reflexão individual de cada membro (1 parágrafo por integrante).

4.3. Apresentação:
4.3.1 Demonstração funcional do sistema;
4.3.2 Explicação técnica;
4.3.3 Respostas a perguntas da banca.